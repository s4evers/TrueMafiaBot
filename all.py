from telethon import TelegramClient
import asyncio
import time

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
api_id = 10953300
api_hash = '9c24426e5d6fa1d441913e3906627f87'
bot_username = '@TrueMafiaBot'  # –ò–º—è –±–æ—Ç–∞
group_id = "-–∑–¥–µ—Å—å_—É–∫–∞–∂–∏—Ç–µ_–∏–¥_–≥—Ä—É–ø–ø—ã"  # ID –≥—Ä—É–ø–ø—ã
sessions = ['1 –∏–º—è_—Å–µ—Å—Å–∏—è', '2 –∏–º—è_—Å–µ—Å—Å–∏—è', '3 –∏–º—è_—Å–µ—Å—Å–∏—è', '4 –∏–º—è_—Å–µ—Å—Å–∏—è']  # –°–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π
session_to_game_name = {
    '–∏–º—è_—Å–µ—Å—Å–∏—è': '–∏–º—è_–ø—Ä–æ—Ñ–∏–ª—è',
    '–∏–º—è_—Å–µ—Å—Å–∏—è': '–∏–º—è_–ø—Ä–æ—Ñ–∏–ª—è',
    '–∏–º—è_—Å–µ—Å—Å–∏—è': '–∏–º—è_–ø—Ä–æ—Ñ–∏–ª—è',
    '–∏–º—è_–ø—Ä–æ—Ñ–∏–ª—è': '–∏–º—è_–ø—Ä–æ—Ñ–∏–ª—è'
}
don_game_name = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∏–º–µ–Ω–∏ –î–æ–Ω–∞

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def log_message(session_name, msg, log_file):
    log_file.write(f"[{session_name}] Message ID: {msg.id}\n")
    log_file.write(f"TEXT: {msg.text}\n")
    if msg.buttons:
        log_file.write("–ö–Ω–æ–ø–∫–∏:\n")
        for row in msg.buttons:
            for button in row:
                log_file.write(f"  - {button.text}\n")
    else:
        log_file.write("–ö–Ω–æ–ø–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n")
    log_file.write("\n")

# –õ–æ–≥–∏–∫–∞ start.py: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
async def process_session(session_name):
    client = TelegramClient(session_name, api_id, api_hash)
    await client.start()
    print(f"[{session_name}] –ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è).")

    # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
    async for msg in client.iter_messages(group_id, limit=100):
        if msg.text and "Ro'yxatdan o'tish boshlandi" in msg.text:
            print(f"\n[{session_name}] –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
            print(f"ID: {msg.id}\n")
            print("TEXT:\n", msg.text)

            # –ü–æ–ª—É—á–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
            if msg.buttons:
                print(f"[{session_name}] –ù–∞–π–¥–µ–Ω–æ {len(msg.buttons)} –∫–Ω–æ–ø–æ–∫.")
                for row in msg.buttons:
                    for button in row:
                        print(f"–ö–Ω–æ–ø–∫–∞: {button.text}")
                        if button.url:
                            link = button.url
                            print(f"–°—Å—ã–ª–∫–∞: {link}")
                            start_param = link.split("start=")[1]
                            print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è start: {start_param}")
                            await client.send_message(bot_username, f'/start {start_param}')
                            print(f"[{session_name}] –ö–æ–º–∞–Ω–¥–∞ /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –±–æ—Ç—É.")
                            break
            else:
                print(f"[{session_name}] –ö–Ω–æ–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            break
    await client.disconnect()

# –õ–æ–≥–∏–∫–∞ run.py: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π
async def check_messages_for_session(client, session_name):
    global don_game_name
    print(f"[{session_name}] –ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π).")

    async for msg in client.iter_messages(bot_username, limit=1):
        if not msg.text:
            print(f"[{session_name}] –°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞.")
            return None, False

        print(f"[{session_name}] –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞:")
        print(f"TEXT: {msg.text}")
        
        with open("log.txt", "a") as log_file:
            await log_message(session_name, msg, log_file)

        if "Siz- üïµÔ∏è‚Äç Komissar Katani!" in msg.text or "Xarakat qilish vaqti keldi!" in msg.text:
            print(f"[{session_name}] –ü–µ—Ä—Å–æ–Ω–∞–∂ ‚Äî –ö–æ–º–∏—Å—Å–∞—Ä! –û–∂–∏–¥–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
            return "Komissar", True
        elif "Siz- ü§µüèª Donsiz (Mafia sardori)!" in msg.text or "Mafia keyingi qurboni uchun ovoz berish o'tkazyapti:" in msg.text:
            print(f"[{session_name}] –ü–µ—Ä—Å–æ–Ω–∞–∂ ‚Äî –î–æ–Ω!")
            don_game_name = session_to_game_name[session_name]
            print(f"[{session_name}] –ò–≥—Ä–æ–≤–æ–µ –∏–º—è –î–æ–Ω–∞: {don_game_name}")
            return "Don", False
        else:
            print(f"[{session_name}] –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –ö–æ–º–∏—Å—Å–∞—Ä –∏ –Ω–µ –î–æ–Ω.")
            return None, False

# –õ–æ–≥–∏–∫–∞ run.py: –¥–µ–π—Å—Ç–≤–∏—è –ö–æ–º–∏—Å—Å–∞—Ä–∞
async def handle_komissar(client, session_name):
    global don_game_name
    print(f"[{session_name}] –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ö–æ–º–∏—Å—Å–∞—Ä–∞...")

    for _ in range(12):  # 60 —Å–µ–∫—É–Ω–¥, –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        async for msg in client.iter_messages(bot_username, limit=1):
            if msg.text and "Xarakat qilish vaqti keldi!" in msg.text:
                print(f"[{session_name}] –ù–∞–π–¥–µ–Ω–æ —Ü–µ–ª–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                print(f"TEXT: {msg.text}")
                
                with open("log.txt", "a") as log_file:
                    await log_message(session_name, msg, log_file)

                if msg.buttons and len(msg.buttons) >= 2:
                    print(f"[{session_name}] –ù–∞–π–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏:")
                    for row in msg.buttons:
                        for button in row:
                            print(f"  - {button.text}")

                    msg_id = msg.id
                    print(f"[{session_name}] ID —Å–æ–æ–±—â–µ–Ω–∏—è: {msg_id}")

                    second_button = msg.buttons[1][0]
                    print(f"[{session_name}] –ù–∞–∂–∏–º–∞–µ–º –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É: {second_button.text}")
                    await second_button.click()
                    
                    print(f"[{session_name}] –û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—ã...")
                    await asyncio.sleep(1)
                    print(f"[{session_name}] –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö 2 —Å–µ–∫—É–Ω–¥...")
                    await asyncio.sleep(2)
                    
                    updated_msg = await client.get_messages(bot_username, ids=msg_id)
                    if updated_msg and updated_msg.buttons:
                        print(f"[{session_name}] –û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
                        print(f"TEXT: {updated_msg.text}")
                        
                        with open("log.txt", "a") as log_file:
                            await log_message(session_name, updated_msg, log_file)
                        
                        print(f"[{session_name}] –ù–∞–π–¥–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–µ—Ä—Ç–≤—ã:")
                        for row in updated_msg.buttons:
                            for button in row:
                                print(f"  - {button.text}")
                        
                        if don_game_name:
                            for row in updated_msg.buttons:
                                for button in row:
                                    print(f"[{session_name}] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É: {button.text}")
                                    if button.text == don_game_name:
                                        print(f"[{session_name}] –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É: {button.text}")
                                        await button.click()
                                        return True
                            print(f"[{session_name}] –î–æ–Ω {don_game_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–Ω–æ–ø–∫–∞—Ö.")
                        else:
                            print(f"[{session_name}] –î–æ–Ω –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω.")
                        return False
                    else:
                        print(f"[{session_name}] –û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–æ–∫.")
                        return False
                
                else:
                    print(f"[{session_name}] –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
                    return False
        
        print(f"[{session_name}] –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...")
        await asyncio.sleep(5)
    
    print(f"[{session_name}] –¶–µ–ª–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞ 60 —Å–µ–∫—É–Ω–¥.")
    return False

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    global don_game_name

    # –®–∞–≥ 1: –û—Ç–ø—Ä–∞–≤–∫–∞ /game –æ—Ç mi
    mi_client = TelegramClient('mi', api_id, api_hash)
    await mi_client.start()
    print("[mi] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /game –≤ –≥—Ä—É–ø–ø—É...")
    await mi_client.send_message(group_id, '/game')
    await mi_client.disconnect()
    
    # –û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—ã
    print("–û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π...")
    time.sleep(1)

    # –®–∞–≥ 2: –õ–æ–≥–∏–∫–∞ start.py (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤)
    print("–ó–∞–ø—É—Å–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    tasks = [process_session(session) for session in sessions]
    await asyncio.gather(*tasks)

    # –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–∫–∞ /start –æ—Ç mi
    mi_client = TelegramClient('mi', api_id, api_hash)
    await mi_client.start()
    print("[mi] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ –≥—Ä—É–ø–ø—É...")
    await mi_client.send_message(group_id, '/start')
    await mi_client.disconnect()
    
    # –û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—ã
    print("–û–∂–∏–¥–∞–Ω–∏–µ 1 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º run.py...")
    time.sleep(1)

    # –®–∞–≥ 4: –õ–æ–≥–∏–∫–∞ run.py (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –∏ –¥–µ–π—Å—Ç–≤–∏—è –ö–æ–º–∏—Å—Å–∞—Ä–∞)
    print("–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π –∏ –¥–µ–π—Å—Ç–≤–∏–π –ö–æ–º–∏—Å—Å–∞—Ä–∞...")
    komissar_session = None
    clients_to_disconnect = []  # –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è

    for session_name in sessions:
        print(f"\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏: {session_name}")
        client = TelegramClient(session_name, api_id, api_hash)
        await client.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        role, should_process = await check_messages_for_session(client, session_name)
        
        if role == "Komissar":
            komissar_session = (client, session_name)
        elif role == "Don":
            clients_to_disconnect.append(client)  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        else:
            clients_to_disconnect.append(client)  # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è

    if komissar_session:
        client, session_name = komissar_session
        success = await handle_komissar(client, session_name)
        if success:
            print(f"[{session_name}] –î–µ–π—Å—Ç–≤–∏—è –ö–æ–º–∏—Å—Å–∞—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.")
        else:
            print(f"[{session_name}] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –ö–æ–º–∏—Å—Å–∞—Ä–∞.")
        clients_to_disconnect.append(client)  # –î–æ–±–∞–≤–ª—è–µ–º –ö–æ–º–∏—Å—Å–∞—Ä–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏–π
    else:
        print("–ö–æ–º–∏—Å—Å–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤.")

    # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–ª–∏–µ–Ω—Ç—ã
    for client in clients_to_disconnect:
        await client.disconnect()

    if not don_game_name:
        print("–î–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤.")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
